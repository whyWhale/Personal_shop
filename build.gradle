plugins {
    id 'org.springframework.boot' version '2.4.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id "io.franzbecker.gradle-lombok" version "3.0.0"
    id 'java'
}

group = 'jpa'
version = '0.0.1-SNAPSHOT-'+new Date().format("yyyyMMddH-Hmmss")
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'com.querydsl:querydsl-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

    //devtool
    implementation 'org.springframework.boot:spring-boot-devtools'

    // Aop
    implementation 'org.springframework.boot:spring-boot-starter-aop'

   // lombok
    annotationProcessor 'org.projectlombok:lombok'

    // Test
    compile 'junit:junit:4.12'
    compile 'org.mariadb.jdbc:mariadb-java-client'
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}

test {
}
def querydslSrcDir = "src/generated/querydsl"

querydsl {
    library ="com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

sourceSets {
    main.java.srcDir querydslSrcDir
}

configurations {
    querydsl.extendsFrom compileClasspath
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(querydslSrcDir)
}

